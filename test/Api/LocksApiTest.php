<?php
/**
 * LocksApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Coucounco\Airkey\Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * EVVA AirKey Cloud API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v18.0.4
 * Contact: office-wien@evva.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.41
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Coucounco\Airkey\Swagger\Client;

use \Coucounco\Airkey\Swagger\Client\Configuration;
use \Coucounco\Airkey\Swagger\Client\ApiException;
use \Coucounco\Airkey\Swagger\Client\ObjectSerializer;

/**
 * LocksApiTest Class Doc Comment
 *
 * @category Class
 * @package  Coucounco\Airkey\Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class LocksApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for addSharedLock
     *
     * Redeems a sharing code to add a lock from another access control system..
     *
     */
    public function testAddSharedLock()
    {
    }

    /**
     * Test case for assignAreas
     *
     * Assigns areas to the specific lock..
     *
     */
    public function testAssignAreas()
    {
    }

    /**
     * Test case for createSharingCode
     *
     * Creates sharing code for a specific lock..
     *
     */
    public function testCreateSharingCode()
    {
    }

    /**
     * Test case for deleteSharingCode
     *
     * Removes sharing code from the specific lock..
     *
     */
    public function testDeleteSharingCode()
    {
    }

    /**
     * Test case for getActiveShares
     *
     * Returns a list of other access control systems your lock has been shared with..
     *
     */
    public function testGetActiveShares()
    {
    }

    /**
     * Test case for getAssignedAreas
     *
     * Gets assigned areas of a specific lock..
     *
     */
    public function testGetAssignedAreas()
    {
    }

    /**
     * Test case for getLock
     *
     * Gets information of a specific lock..
     *
     */
    public function testGetLock()
    {
    }

    /**
     * Test case for getLockSettings
     *
     * Gets settings of a specific lock..
     *
     */
    public function testGetLockSettings()
    {
    }

    /**
     * Test case for getLocks
     *
     * Gets information of all locks..
     *
     */
    public function testGetLocks()
    {
    }

    /**
     * Test case for getSharingCodes
     *
     * Returns a list of sharing codes for a specific lock..
     *
     */
    public function testGetSharingCodes()
    {
    }

    /**
     * Test case for markLockAsToBeRemoved
     *
     * Marks a lock as to be removed. Lock needs to be synchronized to be actually removed..
     *
     */
    public function testMarkLockAsToBeRemoved()
    {
    }

    /**
     * Test case for removeActiveShares
     *
     * Removes shares for a specific lock..
     *
     */
    public function testRemoveActiveShares()
    {
    }

    /**
     * Test case for unassignAreas
     *
     * Unassigns areas from the specific lock..
     *
     */
    public function testUnassignAreas()
    {
    }

    /**
     * Test case for unmarkLockAsToBeRemoved
     *
     * Aborts removal of a lock (removes the to be removed mark on the lock).
     *
     */
    public function testUnmarkLockAsToBeRemoved()
    {
    }

    /**
     * Test case for updateLock
     *
     * Updates the provided lock..
     *
     */
    public function testUpdateLock()
    {
    }

    /**
     * Test case for updateLockSettings
     *
     * Updates settings of the lock..
     *
     */
    public function testUpdateLockSettings()
    {
    }
}
